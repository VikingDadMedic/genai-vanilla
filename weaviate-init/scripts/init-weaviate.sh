#!/bin/sh
set -e

echo "weaviate-init: Starting Weaviate configuration process..."

# Check required env vars
if [ -z "$PGHOST" ] || [ -z "$PGUSER" ] || [ -z "$PGPASSWORD" ] || [ -z "$PGDATABASE" ]; then
  echo "weaviate-init: Error: One or more required environment variables are not set."
  echo "PGHOST=$PGHOST, PGUSER=$PGUSER, PGPASSWORD=[set], PGDATABASE=$PGDATABASE"
  exit 1
fi

echo "weaviate-init: Installing required tools..."
apk add --no-cache postgresql-client

echo "weaviate-init: Waiting for database to be ready..."
sleep 5 # Initial wait
until PGPASSWORD=$PGPASSWORD psql -h $PGHOST -p $PGPORT -d $PGDATABASE -U $PGUSER -c '\q' 2>/dev/null; do
  echo "weaviate-init: Waiting for database..."
  sleep 5
done
echo "weaviate-init: Database is available."

echo "weaviate-init: Querying active Ollama embedding models from database..."
psql_output=$(PGPASSWORD=$PGPASSWORD psql -h $PGHOST -p $PGPORT -d $PGDATABASE -U $PGUSER -t -c "SELECT name FROM public.llms WHERE provider = 'ollama' AND active = true AND embeddings > 0 ORDER BY embeddings DESC LIMIT 1;")

# Trim whitespace and check result
embedding_model=$(echo "$psql_output" | xargs)

if [ -z "$embedding_model" ]; then
  echo "weaviate-init: No active Ollama embedding models found in database."
  echo "weaviate-init: Falling back to default model: nomic-embed-text"
  embedding_model="nomic-embed-text"
else
  echo "weaviate-init: Found active Ollama embedding model: $embedding_model"
fi

# Create configuration file for Weaviate
echo "weaviate-init: Creating Weaviate configuration..."
cat > /shared/weaviate-config.env << EOF
# Generated by weaviate-init on $(date)
WEAVIATE_OLLAMA_EMBEDDING_MODEL=$embedding_model
EOF

echo "weaviate-init: Configuration created:"
cat /shared/weaviate-config.env

# Verify model will be available in Ollama
echo "weaviate-init: Verifying model '$embedding_model' will be pulled by ollama-pull service..."
model_in_db=$(PGPASSWORD=$PGPASSWORD psql -h $PGHOST -p $PGPORT -d $PGDATABASE -U $PGUSER -t -c "SELECT count(*) FROM public.llms WHERE provider = 'ollama' AND active = true AND name = '$embedding_model';")
model_count=$(echo "$model_in_db" | xargs)

if [ "$model_count" = "1" ]; then
  echo "weaviate-init: ✅ Model '$embedding_model' is configured in database and will be pulled by ollama-pull"
else
  echo "weaviate-init: ⚠️  Warning: Model '$embedding_model' may not be available in Ollama"
fi

echo "weaviate-init: Weaviate configuration process completed successfully."
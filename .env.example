# ============================================
# GenAI Vanilla Stack - Environment Variables  
# ============================================
# Template configuration file - copy to .env and fill in values
# Services are organized in the order they appear in docker-compose profiles

# ============================================
# Global Configuration
# ============================================
PROJECT_NAME=genai

# ============================================
# DATA PROFILE SERVICES
# ============================================

# --------------------------------------------
# Supabase Database (supabase-db)
# --------------------------------------------
SUPABASE_DB_IMAGE=supabase/postgres:17.4.1.016
SUPABASE_DB_PORT=63000
# IMPORTANT: Must be 'supabase_admin' - required by Supabase base image
SUPABASE_DB_USER=supabase_admin
SUPABASE_DB_PASSWORD=password
SUPABASE_DB_NAME=postgres
# Additional DB users for applications
SUPABASE_DB_APP_USER=app_user
SUPABASE_DB_APP_PASSWORD=app_password

# --------------------------------------------
# Redis Cache (redis)
# --------------------------------------------
REDIS_IMAGE=redis:7.2-alpine
REDIS_PORT=63001
REDIS_PASSWORD=redis_password
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0

# --------------------------------------------
# Supabase DB Init (supabase-db-init)
# --------------------------------------------
SUPABASE_DB_INIT_IMAGE=postgres:15-alpine

# --------------------------------------------
# Supabase Meta (supabase-meta)
# --------------------------------------------
SUPABASE_META_IMAGE=supabase/postgres-meta:v0.88.9
SUPABASE_META_PORT=63004

# --------------------------------------------
# Supabase Storage (supabase-storage)
# --------------------------------------------
SUPABASE_STORAGE_IMAGE=supabase/storage-api:v1.22.7
SUPABASE_STORAGE_PORT=63005
STORAGE_REGION=local
STORAGE_FILE_SIZE_LIMIT=52428800
STORAGE_BACKEND=file
PROJECT_REF=default
TENANT_ID=stub

# --------------------------------------------
# Supabase Auth (supabase-auth)
# --------------------------------------------
SUPABASE_AUTH_IMAGE=supabase/gotrue:v2.171.0
SUPABASE_AUTH_PORT=63006
# IMPORTANT: Run ./generate_supabase_keys.sh to generate these securely
SUPABASE_JWT_SECRET=
SUPABASE_ANON_KEY=
SUPABASE_SERVICE_KEY=

# --------------------------------------------
# Supabase API/PostgREST (supabase-api)
# --------------------------------------------
SUPABASE_API_IMAGE=postgrest/postgrest:v12.2.10
SUPABASE_API_PORT=63007

# --------------------------------------------
# Supabase Realtime (supabase-realtime)
# --------------------------------------------
SUPABASE_REALTIME_IMAGE=supabase/realtime:v2.33.72
SUPABASE_REALTIME_PORT=63008

# --------------------------------------------
# Neo4j Graph Database (neo4j-graph-db)
# --------------------------------------------
NEO4J_GRAPH_DB_IMAGE=neo4j:5.19.0
GRAPH_DB_HOST=graph-db
GRAPH_DB_PORT=63010
GRAPH_DB_DASHBOARD_PORT=63011
GRAPH_DB_USER=neo4j
GRAPH_DB_PASSWORD=neo4j_password
GRAPH_DB_AUTH=neo4j/neo4j_password  # Neo4j format: username/password

# ============================================
# AI PROFILE SERVICES
# ============================================

# --------------------------------------------
# Ollama LLM Service (ollama)
# --------------------------------------------
OLLAMA_IMAGE=ollama/ollama:latest
OLLAMA_PORT=63012

# --------------------------------------------
# Ollama Model Puller (ollama-pull)
# --------------------------------------------
OLLAMA_PULL_IMAGE=alpine:latest

# --------------------------------------------
# ComfyUI Init (comfyui-init)
# --------------------------------------------
COMFYUI_INIT_IMAGE=alpine:latest

# --------------------------------------------
# Local Deep Researcher (local-deep-researcher)
# --------------------------------------------
LOCAL_DEEP_RESEARCHER_IMAGE=python:3.11-slim
LOCAL_DEEP_RESEARCHER_PORT=63013
LOCAL_DEEP_RESEARCHER_LOOPS=3
LOCAL_DEEP_RESEARCHER_SEARCH_API=searxng

# --------------------------------------------
# SearxNG Search Engine (searxng)
# --------------------------------------------
SEARXNG_IMAGE=searxng/searxng:latest
SEARXNG_PORT=63014
SEARXNG_SECRET=
SEARXNG_PUBLIC_INSTANCE=false
SEARXNG_ENABLE_METRICS=true
SEARXNG_DEFAULT_LOCALE=en

# --------------------------------------------
# n8n Workflow Automation (n8n)
# --------------------------------------------
N8N_IMAGE=n8nio/n8n:latest
N8N_PORT=63017
N8N_ENCRYPTION_KEY=your-random-encryption-key
N8N_AUTH_ENABLED=true
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=n8n_user
N8N_BASIC_AUTH_PASSWORD=n8n_password
N8N_HOST=localhost
N8N_PROTOCOL=http
N8N_EXECUTIONS_MODE=queue
# Community packages support
N8N_COMMUNITY_PACKAGES_ENABLED=true
N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true

# --------------------------------------------
# n8n Init Service (n8n-init)
# --------------------------------------------
N8N_INIT_IMAGE=alpine:latest
N8N_INIT_NODES=n8n-nodes-comfyui,@ksc1234/n8n-nodes-comfyui-image-to-image,n8n-nodes-mcp

# --------------------------------------------
# ComfyUI Image Generation (comfyui)
# --------------------------------------------
COMFYUI_IMAGE=ghcr.io/ai-dock/comfyui:v2-cpu-22.04-v0.2.7  # Use latest-cuda for GPU
COMFYUI_PORT=63018
COMFYUI_BASE_URL=http://comfyui:18188  # For ai-local: http://host.docker.internal:8000
COMFYUI_KONG_URL=http://kong-api-gateway:8000/comfyui
COMFYUI_ARGS=--listen
COMFYUI_AUTO_UPDATE=false
COMFYUI_PLATFORM=linux/amd64  # linux/amd64 for both CPU and GPU
# Storage Integration
COMFYUI_UPLOAD_TO_SUPABASE=true
COMFYUI_STORAGE_BUCKET=comfyui-images
# Model Management
COMFYUI_MODELS_PATH=/opt/ComfyUI/models
COMFYUI_OUTPUT_PATH=/opt/ComfyUI/output
COMFYUI_INPUT_PATH=/opt/ComfyUI/input
COMFYUI_CUSTOM_NODES_PATH=/opt/ComfyUI/custom_nodes
COMFYUI_LOCAL_MODELS_PATH=~/Documents/ComfyUI/models

# ============================================
# APPS PROFILE SERVICES
# ============================================

# --------------------------------------------
# Supabase Studio (supabase-studio)
# --------------------------------------------
SUPABASE_STUDIO_IMAGE=supabase/studio:latest
SUPABASE_STUDIO_PORT=63009

# --------------------------------------------
# Kong API Gateway (kong-api-gateway)
# --------------------------------------------
KONG_API_GATEWAY_IMAGE=kong:3.9.0
KONG_HTTP_PORT=63002
KONG_HTTPS_PORT=63003
DASHBOARD_USERNAME=kong_admin
DASHBOARD_PASSWORD=kong_password

# --------------------------------------------
# Open WebUI (open-web-ui)
# --------------------------------------------
OPEN_WEB_UI_IMAGE=dyrnq/open-webui:latest
OPEN_WEB_UI_PORT=63015
OPEN_WEB_UI_SECRET_KEY=secret

# --------------------------------------------
# Backend API Service (backend)
# --------------------------------------------
BACKEND_IMAGE=python:3.12-slim
BACKEND_PORT=63016

# ============================================
# GPU PROFILE CONFIGURATION
# ============================================
# Resource limits for GPU-enabled services
PROD_ENV_CPUS=2
PROD_ENV_MEM_LIMIT=8g
PROD_ENV_BACKEND_CPUS=1
PROD_ENV_BACKEND_MEM_LIMIT=2g
PROD_ENV_N8N_CPUS=1
PROD_ENV_N8N_MEM_LIMIT=2g
PROD_ENV_COMFYUI_CPUS=2
PROD_ENV_COMFYUI_MEM_LIMIT=4g
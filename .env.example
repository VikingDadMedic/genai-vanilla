# GenAI Vanilla Stack - Environment Variables
# Template configuration file - copy to .env and fill in values

# Docker Compose Configuration
PROJECT_NAME=genai

# Service Endpoints (for external services)
# Uncomment and set these when using external services
# SUPABASE_DB_HOST=
# SUPABASE_STUDIO_HOST=

# Supabase Database Configuration
SUPABASE_DB_PORT=63000
# IMPORTANT: This value MUST be 'supabase_admin' and cannot be changed after database initialization
# The Supabase base image expects this specific username for its internal scripts
SUPABASE_DB_USER=supabase_admin
SUPABASE_DB_PASSWORD=password
SUPABASE_DB_NAME=postgres
# Additional DB users (for application use)
SUPABASE_DB_APP_USER=app_user
SUPABASE_DB_APP_PASSWORD=app_password

# Redis Configuration
REDIS_PORT=63001
REDIS_PASSWORD=redis_password
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0

# Kong API Gateway Configuration
# Default values below are based on DEFAULT_BASE_PORT=63000 and the offsets in start.sh
# KONG_HTTP_PORT = BASE_PORT + 2
# KONG_HTTPS_PORT = BASE_PORT + 3
KONG_HTTP_PORT=63002
KONG_HTTPS_PORT=63003
DASHBOARD_USERNAME=kong_admin # Example username for Kong dashboard (if enabled)
DASHBOARD_PASSWORD=kong_password # Example password for Kong dashboard (if enabled)

# Supabase Meta Configuration
SUPABASE_META_PORT=63004

# Supabase Storage Configuration
SUPABASE_STORAGE_PORT=63005
STORAGE_REGION=local
STORAGE_FILE_SIZE_LIMIT=52428800
STORAGE_BACKEND=file
PROJECT_REF=default
TENANT_ID=stub

# Supabase authentication configuration
SUPABASE_AUTH_PORT=63006
# IMPORTANT: Run ./generate_supabase_keys.sh to automatically generate these keys
# The script will update this file with secure values for all three keys below
SUPABASE_JWT_SECRET=
SUPABASE_ANON_KEY=
SUPABASE_SERVICE_KEY=

# Supabase API (PostgREST) Configuration
SUPABASE_API_PORT=63007

# Supabase Realtime Configuration
SUPABASE_REALTIME_PORT=63008

# Supabase Studio Configuration
SUPABASE_STUDIO_PORT=63009

# Graph Database (Neo4j) Configuration
GRAPH_DB_HOST=graph-db
GRAPH_DB_PORT=63010
GRAPH_DB_DASHBOARD_PORT=63011
GRAPH_DB_USER=neo4j
GRAPH_DB_PASSWORD=neo4j_password
# Neo4j format: username/password (used by Neo4j container internally)
GRAPH_DB_AUTH=neo4j/neo4j_password

# Ollama Configuration
OLLAMA_PORT=63012

# Local Deep Researcher Configuration
LOCAL_DEEP_RESEARCHER_PORT=63013
LOCAL_DEEP_RESEARCHER_LOOPS=3
LOCAL_DEEP_RESEARCHER_SEARCH_API=searxng

# SearxNG Configuration
SEARXNG_PORT=63014
SEARXNG_SECRET=
SEARXNG_PUBLIC_INSTANCE=false
SEARXNG_ENABLE_METRICS=true
SEARXNG_DEFAULT_LOCALE=en

# OpenWebUI Configuration
OPEN_WEB_UI_PORT=63015
OPEN_WEB_UI_SECRET_KEY=secret

# Backend Configuration
BACKEND_PORT=63016

# n8n Configuration
N8N_PORT=63017
N8N_ENCRYPTION_KEY=your-random-encryption-key
N8N_AUTH_ENABLED=true
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=n8n_user
N8N_BASIC_AUTH_PASSWORD=n8n_password
N8N_HOST=localhost
N8N_PROTOCOL=http
N8N_EXECUTIONS_MODE=queue

# ComfyUI Configuration
COMFYUI_PORT=63018
COMFYUI_BASE_URL=http://comfyui:8188  # For ai-local profile, this is overridden to http://host.docker.internal:8000
COMFYUI_KONG_URL=http://kong-api-gateway:8000/comfyui
COMFYUI_ARGS=--listen
COMFYUI_AUTO_UPDATE=false
COMFYUI_PLATFORM=linux/amd64  # linux/amd64 for both CPU and GPU
COMFYUI_IMAGE_TAG=v2-cpu-22.04-v0.2.7  # latest-cuda for GPU

# ComfyUI Storage Integration
COMFYUI_UPLOAD_TO_SUPABASE=true
COMFYUI_STORAGE_BUCKET=comfyui-images

# ComfyUI Model Management
COMFYUI_MODELS_PATH=/opt/ComfyUI/models
COMFYUI_OUTPUT_PATH=/opt/ComfyUI/output
COMFYUI_INPUT_PATH=/opt/ComfyUI/input
COMFYUI_CUSTOM_NODES_PATH=/opt/ComfyUI/custom_nodes
COMFYUI_LOCAL_MODELS_PATH=~/Documents/ComfyUI/models

# GPU configuration for prod-gpu flavor
PROD_ENV_CPUS=2
PROD_ENV_MEM_LIMIT=8g
PROD_ENV_BACKEND_CPUS=1
PROD_ENV_BACKEND_MEM_LIMIT=2g
PROD_ENV_N8N_CPUS=1
PROD_ENV_N8N_MEM_LIMIT=2g
PROD_ENV_COMFYUI_CPUS=2
PROD_ENV_COMFYUI_MEM_LIMIT=4g

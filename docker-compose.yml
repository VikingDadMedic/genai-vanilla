version: '3.8'

services:
  sql-db:
    build:
      context: ./sql-db
    container_name: ${PROJECT_NAME}-sql-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SQL_DB_USER}
      POSTGRES_PASSWORD: ${SQL_DB_PASSWORD}
      POSTGRES_DB: ${SQL_DB_NAME}
    volumes:
      - ./sql-db/scripts:/scripts
      - ./sql-db/snapshot:/docker-entrypoint-initdb.d/snapshots
      - sql-db-data:/var/lib/postgresql/data
    ports:
      - "${SQL_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_DB_USER} -d ${SQL_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - backend

  sql-db-dashboard:
    image: dpage/pgadmin4:latest
    container_name: ${PROJECT_NAME}-sql-db-dashboard
    restart: unless-stopped
    depends_on:
      - sql-db
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${SQL_DB_DASHBOARD_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${SQL_DB_DASHBOARD_PASSWORD}
      # Improve user experience by disabling some prompts
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "${SQL_DB_DASHBOARD_PORT}:80"
    volumes:
      - sql-db-dashboard-data:/var/lib/pgadmin
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - backend
      
  graph-db:
    build:
      context: ./graph-db
    container_name: ${PROJECT_NAME}-graph-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NEO4J_AUTH: ${GRAPH_DB_AUTH}
      # This advertises the correct address for internal container usage
      NEO4J_server_default__advertised__address: "localhost"
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      # Enable APOC plugin for advanced operations
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      # Configure browser connection to use the internal Bolt connector
      NEO4J_browser_remote__content__hostname__whitelist: "*"
    ports:
      - "${GRAPH_DB_PORT}:7687" # Bolt port
      - "${GRAPH_DB_DASHBOARD_PORT}:7474" # HTTP port (dashboard)
    volumes:
      - ./graph-db/scripts:/scripts
      - ./graph-db/snapshot:/snapshot
      - graph-db-data:/data
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  sql-db-data:
    driver: local
  sql-db-dashboard-data:
    driver: local
  graph-db-data:
    driver: local
